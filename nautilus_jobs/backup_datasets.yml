apiVersion: batch/v1
kind: Job
metadata:
  name: adap-backup
spec:
  backoffLimit: 0
  template:
    spec:
      containers:
      - args:
        - apt-get update;  apt-get -y install rclone; apt-get -y install awscli;
          cd /tmp; 
          aws --endpoint $ENDPOINT_URL s3 cp --no-progress s3://pypeit/adap/scripts/backup_list.txt .;
          aws --endpoint $ENDPOINT_URL s3 cp --no-progress s3://pypeit/adap/scripts/backup_datasets.sh .; 
          aws --endpoint $ENDPOINT_URL s3 cp --no-progress s3://pypeit/adap/scripts/rclone.conf .; 
          bash ./backup_datasets.sh
        command:
        - /bin/bash
        - -c
        image: docker.io/profxj/pypeit_v1@sha256:a2f91f18fb33119a7f08d804dd3259118e0e934612c3868df58f434e3d980740
        imagePullPolicy: Always
        name: container
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
            ephemeral-storage: 128Gi
          requests:
            cpu: '1'
            memory: 1Gi
            ephemeral-storage: 128Gi
        volumeMounts:
        - mountPath: /root/.config/gspread/service_account.json
          name: gcloud-service-account
          subPath: credentials
        - mountPath: /tmp
          name: ephemeral
        - mountPath: /root/.aws/credentials
          name: prp-s3-credentials
          subPath: credentials
        env:
           - name: ENDPOINT_URL
             value: http://rook-ceph-rgw-nautiluss3.rook
      nodeSelector:
        nautilus.io/disktype: nvme
      restartPolicy: Never
      volumes:
      - name: gcloud-service-account
        secret:
          secretName: adap-scorecard-gcloud
      - name: prp-s3-credentials
        secret:
          secretName: prp-s3-credentials            
      - emptyDir: {}
        name: ephemeral
